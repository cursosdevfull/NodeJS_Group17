"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(e,r,t,o){void 0===o&&(o=t);var s=Object.getOwnPropertyDescriptor(r,t);s&&!("get"in s?!r.__esModule:s.writable||s.configurable)||(s={enumerable:!0,get:function(){return r[t]}}),Object.defineProperty(e,o,s)}:function(e,r,t,o){void 0===o&&(o=t),e[o]=r[t]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(e,r){Object.defineProperty(e,"default",{enumerable:!0,value:r})}:function(e,r){e.default=r}),__importStar=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var r={};if(null!=e)for(var t in e)"default"!==t&&Object.prototype.hasOwnProperty.call(e,t)&&__createBinding(r,e,t);return __setModuleDefault(r,e),r};Object.defineProperty(exports,"__esModule",{value:!0}),exports.ServerBootstrap=void 0;const http=__importStar(require("http")),parameters_1=require("../core/parameters/parameters"),logger_1=require("../core/utils/logger");class ServerBootstrap{constructor(e){this.app=e,this.logger=logger_1.Logger.createLogger()}initialize(){return new Promise(((e,r)=>{const t=http.createServer(this.app),o=parameters_1.Parameters.port,s=parameters_1.Parameters.host;t.listen(o,s).on("listening",(()=>{const r=t.address();e(`HTTP server is running on http://${r.address}:${r.port}`)})).on("error",(e=>{this.logger.logError("Error on server",e),r(e)})),ServerBootstrap.server=t}))}close(){ServerBootstrap.server.close((()=>{this.logger.logInfo("Server closed"),process.exit(0)}))}static get serverInstance(){return ServerBootstrap.server}}exports.ServerBootstrap=ServerBootstrap;