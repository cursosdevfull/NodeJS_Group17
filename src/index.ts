import * as fs from "fs";
import * as http from "http";

const server = http.createServer(
  (request: http.IncomingMessage, response: http.ServerResponse) => {
    if (request.url === "/") {
      response.writeHead(200);
      response.write("Response generated by Node.js server");
      response.end();
    } else if (request.url === "/api") {
      response.writeHead(200);
      response.write("API response generated by Node.js server");
      response.write("Copyright 2024");
      response.end();
    } else if (request.url === "/user") {
      response.writeHead(200, { "content-type": "application/json" });
      response.write(
        JSON.stringify([{ user: "John Doe" }, { user: "Jane Doe" }])
      );
      response.end();
    } else if (request.url === "/about") {
      response.writeHead(200, { "content-type": "text/html" });
      response.write("<h1>About page</h1>");
      response.write("<p>This is the about page</p>");
      response.end("<footer>End of about page</footer>");
    } else if (request.url === "/file") {
      response.writeHead(200, { "content-type": "application/pdf" });
      const pathScript = __dirname;
      const content = fs.readFileSync(`${pathScript}/manual.pdf`);
      response.write(content);
      response.end();
    } else if (request.url === "/image") {
      fs.readFile(`${__dirname}/paisaje2.jpg`, (err, result) => {
        console.log("Result of readFile");
        if (err) {
          response.writeHead(404);
          response.end("Error reading image");
          return;
        }
        response.writeHead(200, { "content-type": "image/jpeg" });
        response.write(result);
        response.end();
      });
      console.log("After readFile");
    } else {
      response.writeHead(404);
      response.end("Page not found");
    }
  }
);

server.listen(3000, () => {
  console.log("Server is listening on port 3000");
});
