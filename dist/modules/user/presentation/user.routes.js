"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.router=void 0;const express_1=require("express"),query_cache_1=require("../../../core/cache/query.cache"),authentication_guard_1=require("../../../core/guards/authentication.guard"),authorization_guard_1=require("../../../core/guards/authorization.guard"),user_application_1=require("../application/user.application"),user_infrastructure_1=require("../infrastructure/user.infrastructure"),user_controller_1=require("./user.controller");class UserRoutes{constructor(e){this.controller=e,this.router=(0,express_1.Router)(),this.mountRoutes()}mountRoutes(){const e=new authentication_guard_1.AuthenticationGuard,r=new authorization_guard_1.AuthorizationGuard;this.router.post("/v1/",e.execute2FA(!0).canActivate,r.rolesAllowed("ADMIN").canActivate,this.controller.create),this.router.get("/v1/",e.execute2FA(!0).canActivate,r.rolesAllowed("ADMIN","OPERATOR").canActivate,query_cache_1.QueryCache.build("users"),this.controller.getAll),this.router.get("/v1/:userId",e.execute2FA(!0).canActivate,r.rolesAllowed("ADMIN").canActivate,query_cache_1.QueryCache.build("users"),this.controller.getById),this.router.put("/v1/:userId",e.execute2FA(!0).canActivate,r.rolesAllowed("ADMIN").canActivate,this.controller.update),this.router.delete("/v1/:userId",e.execute2FA(!0).canActivate,r.rolesAllowed("ADMIN").canActivate,this.controller.delete),this.router.get("/v1/page",e.execute2FA(!0).canActivate,r.rolesAllowed("ADMIN").canActivate,this.controller.getByPage)}getRouter(){return this.router}}const repository=new user_infrastructure_1.UserInfrastructure,application=new user_application_1.UserApplication(repository),controller=new user_controller_1.UserController(application),router=new UserRoutes(controller).getRouter();exports.router=router;