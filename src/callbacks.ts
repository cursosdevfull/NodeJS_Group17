import * as fs from "fs";
import * as http from "http";

export const home = (
  request: http.IncomingMessage,
  response: http.ServerResponse
) => {
  response.writeHead(200);
  response.write("Response generated by Node.js with typescript server");
  response.end();
};

export const api = (
  request: http.IncomingMessage,
  response: http.ServerResponse
) => {
  response.writeHead(200);
  response.write("API response generated by Node.js server");
  response.write("Copyright 2024");
  response.end();
};

export const user = (
  request: http.IncomingMessage,
  response: http.ServerResponse
) => {
  response.writeHead(200, { "content-type": "application/json" });
  response.write(JSON.stringify([{ user: "John Doe" }, { user: "Jane Doe" }]));
  response.end();
};

export const about = (
  request: http.IncomingMessage,
  response: http.ServerResponse
) => {
  response.writeHead(200, { "content-type": "text/html" });
  response.write("<h1>About page</h1>");
  response.write("<p>This is the about page</p>");
  response.end("<footer>End of about page</footer>");
};

export const file = (
  request: http.IncomingMessage,
  response: http.ServerResponse
) => {
  response.writeHead(200, { "content-type": "application/pdf" });
  const pathScript = __dirname;
  const content = fs.readFileSync(`${pathScript}/manual.pdf`);
  response.write(content);
  response.end();
};

export const image = (
  request: http.IncomingMessage,
  response: http.ServerResponse
) => {
  fs.readFile(`${__dirname}/paisaje.jpg`, (err, result) => {
    console.log("Result of readFile");
    if (err) {
      response.writeHead(404);
      response.end("Error reading image");
      return;
    }
    response.writeHead(200, { "content-type": "image/jpeg" });
    response.write(result);
    response.end();
  });
};

export const video = (
  request: http.IncomingMessage,
  response: http.ServerResponse
) => {
  response.writeHead(200, { "content-type": "video/mp4" });
  const stream = fs.createReadStream(`${__dirname}/video.mp4`);
  stream.pipe(response);
};
