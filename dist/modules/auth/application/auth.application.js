"use strict";var __awaiter=this&&this.__awaiter||function(e,r,t,o){return new(t||(t=Promise))((function(n,s){function i(e){try{a(o.next(e))}catch(e){s(e)}}function c(e){try{a(o.throw(e))}catch(e){s(e)}}function a(e){var r;e.done?n(e.value):(r=e.value,r instanceof t?r:new t((function(e){e(r)}))).then(i,c)}a((o=o.apply(e,r||[])).next())}))};Object.defineProperty(exports,"__esModule",{value:!0}),exports.AuthApplication=void 0;const neverthrow_1=require("neverthrow"),exception_1=require("../../../core/handle-errors/responses/exception"),crypt_1=require("../../../core/services/crypt"),tokens_1=require("../../../core/services/tokens");class AuthApplication{constructor(e){this.userRepository=e}login(e){return __awaiter(this,void 0,void 0,(function*(){const r=yield this.userRepository.getByEmail(e.properties.email);if(r.isErr())return(0,neverthrow_1.err)(r.error);const t=r.value;if(!t)return(0,neverthrow_1.err)(new exception_1.NotFoundException({message:"User not found",name:"User not found"}));return crypt_1.Crypt.compare(e.properties.password,t.properties.password)?(0,neverthrow_1.ok)(tokens_1.Tokens.generateTokens(t)):(0,neverthrow_1.err)(new exception_1.BadRequestException({message:"Invalid password",name:"Invalid password"}))}))}getNewAccessToken(e){return __awaiter(this,void 0,void 0,(function*(){const r=yield this.userRepository.getByRefreshToken(e);if(r.isErr())return(0,neverthrow_1.err)(r.error);const t=r.value;if(!t)return(0,neverthrow_1.err)(new exception_1.NotFoundException({message:"User not found",name:"User not found"}));t.update({refreshToken:tokens_1.Tokens.generateRefreshToken()});const o=yield this.userRepository.save(t);return o.isErr()?(0,neverthrow_1.err)(o.error):(0,neverthrow_1.ok)(tokens_1.Tokens.generateTokens(t))}))}}exports.AuthApplication=AuthApplication;