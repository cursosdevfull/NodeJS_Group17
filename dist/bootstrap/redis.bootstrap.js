"use strict";var __awaiter=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))((function(s,o){function a(e){try{c(i.next(e))}catch(e){o(e)}}function n(e){try{c(i.throw(e))}catch(e){o(e)}}function c(e){var t;e.done?s(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(a,n)}c((i=i.apply(e,t||[])).next())}))},__importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.RedisBootstrap=void 0;const ioredis_1=__importDefault(require("ioredis")),parameters_1=require("../core/parameters/parameters"),logger_1=require("../core/utils/logger");class RedisBootstrap{constructor(){this.logger=logger_1.Logger.createLogger()}initialize(){return new Promise(((e,t)=>{const r=new ioredis_1.default({host:parameters_1.Parameters.redisHost,port:parameters_1.Parameters.redisPort,password:parameters_1.Parameters.redisPassword,maxRetriesPerRequest:parameters_1.Parameters.redisMaxRetriesPerRequest});r.on("connect",(()=>{this.logger.logInfo("Redis is running"),e(!0)})).on("error",(e=>{this.logger.logError("Redis connection error",e),t(e)})),RedisBootstrap.client=r}))}close(){var e;null===(e=RedisBootstrap.client)||void 0===e||e.disconnect()}static get redisClient(){return RedisBootstrap.client}static set(e,t){return __awaiter(this,void 0,void 0,(function*(){yield RedisBootstrap.client.set(e,t,"PX",parameters_1.Parameters.redisExpiresIn)}))}static get(e){return __awaiter(this,void 0,void 0,(function*(){return RedisBootstrap.client.get(e)}))}static clear(){return __awaiter(this,arguments,void 0,(function*(e=""){const t=yield RedisBootstrap.client.keys(`${e}*`),r=RedisBootstrap.client.pipeline();t.forEach((e=>{r.del(e)})),yield r.exec()}))}}exports.RedisBootstrap=RedisBootstrap;